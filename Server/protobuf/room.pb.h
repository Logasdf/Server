// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#ifndef PROTOBUF_INCLUDED_room_2eproto
#define PROTOBUF_INCLUDED_room_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_room_2eproto 

namespace protobuf_room_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_room_2eproto
namespace packet {
class Client;
class ClientDefaultTypeInternal;
extern ClientDefaultTypeInternal _Client_default_instance_;
class Room;
class RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
class RoomList;
class RoomListDefaultTypeInternal;
extern RoomListDefaultTypeInternal _RoomList_default_instance_;
class RoomList_RoomsEntry_DoNotUse;
class RoomList_RoomsEntry_DoNotUseDefaultTypeInternal;
extern RoomList_RoomsEntry_DoNotUseDefaultTypeInternal _RoomList_RoomsEntry_DoNotUse_default_instance_;
}  // namespace packet
namespace google {
namespace protobuf {
template<> ::packet::Client* Arena::CreateMaybeMessage<::packet::Client>(Arena*);
template<> ::packet::Room* Arena::CreateMaybeMessage<::packet::Room>(Arena*);
template<> ::packet::RoomList* Arena::CreateMaybeMessage<::packet::RoomList>(Arena*);
template<> ::packet::RoomList_RoomsEntry_DoNotUse* Arena::CreateMaybeMessage<::packet::RoomList_RoomsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace packet {

// ===================================================================

class Client : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet.Client) */ {
 public:
  Client();
  virtual ~Client();

  Client(const Client& from);

  inline Client& operator=(const Client& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Client(Client&& from) noexcept
    : Client() {
    *this = ::std::move(from);
  }

  inline Client& operator=(Client&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Client& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Client* internal_default_instance() {
    return reinterpret_cast<const Client*>(
               &_Client_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Client* other);
  friend void swap(Client& a, Client& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Client* New() const final {
    return CreateMaybeMessage<Client>(NULL);
  }

  Client* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Client>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Client& from);
  void MergeFrom(const Client& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Client* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 2;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // int32 clntId = 1;
  void clear_clntid();
  static const int kClntIdFieldNumber = 1;
  ::google::protobuf::int32 clntid() const;
  void set_clntid(::google::protobuf::int32 value);

  // int32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // int32 position = 4;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // bool ready = 5;
  void clear_ready();
  static const int kReadyFieldNumber = 5;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:packet.Client)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 clntid_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 position_;
  bool ready_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Room : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet.Room) */ {
 public:
  Room();
  virtual ~Room();

  Room(const Room& from);

  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Room(Room&& from) noexcept
    : Room() {
    *this = ::std::move(from);
  }

  inline Room& operator=(Room&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Room& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Room* internal_default_instance() {
    return reinterpret_cast<const Room*>(
               &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Room* other);
  friend void swap(Room& a, Room& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Room* New() const final {
    return CreateMaybeMessage<Room>(NULL);
  }

  Room* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Room>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Room& from);
  void MergeFrom(const Room& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Room* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .packet.Client redTeam = 5;
  int redteam_size() const;
  void clear_redteam();
  static const int kRedTeamFieldNumber = 5;
  ::packet::Client* mutable_redteam(int index);
  ::google::protobuf::RepeatedPtrField< ::packet::Client >*
      mutable_redteam();
  const ::packet::Client& redteam(int index) const;
  ::packet::Client* add_redteam();
  const ::google::protobuf::RepeatedPtrField< ::packet::Client >&
      redteam() const;

  // repeated .packet.Client blueTeam = 6;
  int blueteam_size() const;
  void clear_blueteam();
  static const int kBlueTeamFieldNumber = 6;
  ::packet::Client* mutable_blueteam(int index);
  ::google::protobuf::RepeatedPtrField< ::packet::Client >*
      mutable_blueteam();
  const ::packet::Client& blueteam(int index) const;
  ::packet::Client* add_blueteam();
  const ::google::protobuf::RepeatedPtrField< ::packet::Client >&
      blueteam() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 roomId = 1;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 current = 4;
  void clear_current();
  static const int kCurrentFieldNumber = 4;
  ::google::protobuf::int32 current() const;
  void set_current(::google::protobuf::int32 value);

  // int32 readyCount = 7;
  void clear_readycount();
  static const int kReadyCountFieldNumber = 7;
  ::google::protobuf::int32 readycount() const;
  void set_readycount(::google::protobuf::int32 value);

  // int32 host = 8;
  void clear_host();
  static const int kHostFieldNumber = 8;
  ::google::protobuf::int32 host() const;
  void set_host(::google::protobuf::int32 value);

  // int32 myPosition = 9;
  void clear_myposition();
  static const int kMyPositionFieldNumber = 9;
  ::google::protobuf::int32 myposition() const;
  void set_myposition(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet.Room)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::packet::Client > redteam_;
  ::google::protobuf::RepeatedPtrField< ::packet::Client > blueteam_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 current_;
  ::google::protobuf::int32 readycount_;
  ::google::protobuf::int32 host_;
  ::google::protobuf::int32 myposition_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomList_RoomsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<RoomList_RoomsEntry_DoNotUse, 
    ::google::protobuf::int32, ::packet::Room,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<RoomList_RoomsEntry_DoNotUse, 
    ::google::protobuf::int32, ::packet::Room,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  RoomList_RoomsEntry_DoNotUse();
  RoomList_RoomsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const RoomList_RoomsEntry_DoNotUse& other);
  static const RoomList_RoomsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const RoomList_RoomsEntry_DoNotUse*>(&_RoomList_RoomsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class RoomList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packet.RoomList) */ {
 public:
  RoomList();
  virtual ~RoomList();

  RoomList(const RoomList& from);

  inline RoomList& operator=(const RoomList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoomList(RoomList&& from) noexcept
    : RoomList() {
    *this = ::std::move(from);
  }

  inline RoomList& operator=(RoomList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoomList* internal_default_instance() {
    return reinterpret_cast<const RoomList*>(
               &_RoomList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RoomList* other);
  friend void swap(RoomList& a, RoomList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoomList* New() const final {
    return CreateMaybeMessage<RoomList>(NULL);
  }

  RoomList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoomList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoomList& from);
  void MergeFrom(const RoomList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoomList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .packet.Room> rooms = 1;
  int rooms_size() const;
  void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::packet::Room >&
      rooms() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::packet::Room >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:packet.RoomList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      RoomList_RoomsEntry_DoNotUse,
      ::google::protobuf::int32, ::packet::Room,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > rooms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_room_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Client

// int32 clntId = 1;
inline void Client::clear_clntid() {
  clntid_ = 0;
}
inline ::google::protobuf::int32 Client::clntid() const {
  // @@protoc_insertion_point(field_get:packet.Client.clntId)
  return clntid_;
}
inline void Client::set_clntid(::google::protobuf::int32 value) {
  
  clntid_ = value;
  // @@protoc_insertion_point(field_set:packet.Client.clntId)
}

// string ip = 2;
inline void Client::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Client::ip() const {
  // @@protoc_insertion_point(field_get:packet.Client.ip)
  return ip_.GetNoArena();
}
inline void Client::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet.Client.ip)
}
#if LANG_CXX11
inline void Client::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:packet.Client.ip)
}
#endif
inline void Client::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet.Client.ip)
}
inline void Client::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet.Client.ip)
}
inline ::std::string* Client::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:packet.Client.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Client::release_ip() {
  // @@protoc_insertion_point(field_release:packet.Client.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Client::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:packet.Client.ip)
}

// int32 port = 3;
inline void Client::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 Client::port() const {
  // @@protoc_insertion_point(field_get:packet.Client.port)
  return port_;
}
inline void Client::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:packet.Client.port)
}

// int32 position = 4;
inline void Client::clear_position() {
  position_ = 0;
}
inline ::google::protobuf::int32 Client::position() const {
  // @@protoc_insertion_point(field_get:packet.Client.position)
  return position_;
}
inline void Client::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:packet.Client.position)
}

// bool ready = 5;
inline void Client::clear_ready() {
  ready_ = false;
}
inline bool Client::ready() const {
  // @@protoc_insertion_point(field_get:packet.Client.ready)
  return ready_;
}
inline void Client::set_ready(bool value) {
  
  ready_ = value;
  // @@protoc_insertion_point(field_set:packet.Client.ready)
}

// -------------------------------------------------------------------

// Room

// int32 roomId = 1;
inline void Room::clear_roomid() {
  roomid_ = 0;
}
inline ::google::protobuf::int32 Room::roomid() const {
  // @@protoc_insertion_point(field_get:packet.Room.roomId)
  return roomid_;
}
inline void Room::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:packet.Room.roomId)
}

// string name = 2;
inline void Room::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Room::name() const {
  // @@protoc_insertion_point(field_get:packet.Room.name)
  return name_.GetNoArena();
}
inline void Room::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packet.Room.name)
}
#if LANG_CXX11
inline void Room::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:packet.Room.name)
}
#endif
inline void Room::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packet.Room.name)
}
inline void Room::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packet.Room.name)
}
inline ::std::string* Room::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:packet.Room.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Room::release_name() {
  // @@protoc_insertion_point(field_release:packet.Room.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Room::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:packet.Room.name)
}

// int32 limit = 3;
inline void Room::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 Room::limit() const {
  // @@protoc_insertion_point(field_get:packet.Room.limit)
  return limit_;
}
inline void Room::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:packet.Room.limit)
}

// int32 current = 4;
inline void Room::clear_current() {
  current_ = 0;
}
inline ::google::protobuf::int32 Room::current() const {
  // @@protoc_insertion_point(field_get:packet.Room.current)
  return current_;
}
inline void Room::set_current(::google::protobuf::int32 value) {
  
  current_ = value;
  // @@protoc_insertion_point(field_set:packet.Room.current)
}

// repeated .packet.Client redTeam = 5;
inline int Room::redteam_size() const {
  return redteam_.size();
}
inline void Room::clear_redteam() {
  redteam_.Clear();
}
inline ::packet::Client* Room::mutable_redteam(int index) {
  // @@protoc_insertion_point(field_mutable:packet.Room.redTeam)
  return redteam_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::packet::Client >*
Room::mutable_redteam() {
  // @@protoc_insertion_point(field_mutable_list:packet.Room.redTeam)
  return &redteam_;
}
inline const ::packet::Client& Room::redteam(int index) const {
  // @@protoc_insertion_point(field_get:packet.Room.redTeam)
  return redteam_.Get(index);
}
inline ::packet::Client* Room::add_redteam() {
  // @@protoc_insertion_point(field_add:packet.Room.redTeam)
  return redteam_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::packet::Client >&
Room::redteam() const {
  // @@protoc_insertion_point(field_list:packet.Room.redTeam)
  return redteam_;
}

// repeated .packet.Client blueTeam = 6;
inline int Room::blueteam_size() const {
  return blueteam_.size();
}
inline void Room::clear_blueteam() {
  blueteam_.Clear();
}
inline ::packet::Client* Room::mutable_blueteam(int index) {
  // @@protoc_insertion_point(field_mutable:packet.Room.blueTeam)
  return blueteam_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::packet::Client >*
Room::mutable_blueteam() {
  // @@protoc_insertion_point(field_mutable_list:packet.Room.blueTeam)
  return &blueteam_;
}
inline const ::packet::Client& Room::blueteam(int index) const {
  // @@protoc_insertion_point(field_get:packet.Room.blueTeam)
  return blueteam_.Get(index);
}
inline ::packet::Client* Room::add_blueteam() {
  // @@protoc_insertion_point(field_add:packet.Room.blueTeam)
  return blueteam_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::packet::Client >&
Room::blueteam() const {
  // @@protoc_insertion_point(field_list:packet.Room.blueTeam)
  return blueteam_;
}

// int32 readyCount = 7;
inline void Room::clear_readycount() {
  readycount_ = 0;
}
inline ::google::protobuf::int32 Room::readycount() const {
  // @@protoc_insertion_point(field_get:packet.Room.readyCount)
  return readycount_;
}
inline void Room::set_readycount(::google::protobuf::int32 value) {
  
  readycount_ = value;
  // @@protoc_insertion_point(field_set:packet.Room.readyCount)
}

// int32 host = 8;
inline void Room::clear_host() {
  host_ = 0;
}
inline ::google::protobuf::int32 Room::host() const {
  // @@protoc_insertion_point(field_get:packet.Room.host)
  return host_;
}
inline void Room::set_host(::google::protobuf::int32 value) {
  
  host_ = value;
  // @@protoc_insertion_point(field_set:packet.Room.host)
}

// int32 myPosition = 9;
inline void Room::clear_myposition() {
  myposition_ = 0;
}
inline ::google::protobuf::int32 Room::myposition() const {
  // @@protoc_insertion_point(field_get:packet.Room.myPosition)
  return myposition_;
}
inline void Room::set_myposition(::google::protobuf::int32 value) {
  
  myposition_ = value;
  // @@protoc_insertion_point(field_set:packet.Room.myPosition)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RoomList

// map<int32, .packet.Room> rooms = 1;
inline int RoomList::rooms_size() const {
  return rooms_.size();
}
inline void RoomList::clear_rooms() {
  rooms_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::packet::Room >&
RoomList::rooms() const {
  // @@protoc_insertion_point(field_map:packet.RoomList.rooms)
  return rooms_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::packet::Room >*
RoomList::mutable_rooms() {
  // @@protoc_insertion_point(field_mutable_map:packet.RoomList.rooms)
  return rooms_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_room_2eproto
